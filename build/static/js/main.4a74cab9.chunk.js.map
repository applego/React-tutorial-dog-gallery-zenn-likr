{"version":3,"sources":["api.js","App.js","index.js"],"names":["fetchImages","breed","a","fetch","response","json","data","message","Header","className","Image","props","src","url","alt","Loading","Gallery","urls","map","Form","onSubmit","event","preventDefault","target","elements","onFormSubmit","value","name","defaultValue","type","Main","useState","setUrls","useEffect","then","Footer","href","App","render","document","querySelector"],"mappings":"wOAAO,SAAeA,EAAtB,kC,4CAAO,WAA2BC,GAA3B,iBAAAC,EAAA,sEACkBC,MAAM,6BAAD,OACGF,EADH,sBADvB,cACCG,EADD,gBAIcA,EAASC,OAJvB,cAICC,EAJD,yBAKEA,EAAKC,SALP,4C,sBCGP,SAASC,IACP,OACE,wBAAQC,UAAU,uBAAlB,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,QAAd,mCAOV,SAASC,EAAMC,GACb,OACE,qBAAKF,UAAU,OAAf,SACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,QAAlB,SACE,qBACEG,IAAKD,EAAME,IACXC,IAAI,mBAQhB,SAASC,IACP,OACE,2CAIJ,SAASC,EAAQL,GAAQ,IACfM,EAASN,EAATM,KACR,OAAa,OAATA,EACK,cAACF,EAAD,IAGP,qBAAKN,UAAU,oCAAf,SACGQ,EAAKC,KAAI,SAAAL,GACR,OACE,qBAAeJ,UAAU,cAAzB,SACE,cAACC,EAAD,CAAOG,IAAKA,KADJA,QASpB,SAASM,EAAKR,GAOZ,OACE,8BACE,sBAAMS,SARV,SAAsBC,GACpBA,EAAMC,iBADqB,IAEnBrB,EAAUoB,EAAME,OAAOC,SAAvBvB,MACRU,EAAMc,aAAaxB,EAAMyB,QAKvB,SACE,sBAAKjB,UAAU,mBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,yBAAQkB,KAAK,QAAQC,aAAa,QAAlC,UACE,wBAAQF,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,0BAIN,qBAAKjB,UAAU,UAAf,SACE,wBAAQoB,KAAK,SAASpB,UAAU,iBAAhC,6BAUZ,SAASqB,IAAO,MAgBUC,mBAAS,MAhBnB,mBAgBPd,EAhBO,KAgBDe,EAhBC,KA2Bd,OAVAC,qBAAU,WACRjC,EAAY,SAASkC,MAAK,SAACjB,GACzBe,EAAQf,QAET,IAOD,iCACE,yBAASR,UAAU,UAAnB,SACE,qBAAKA,UAAU,YAAf,SACE,cAACU,EAAD,CAAMM,aATd,SAAsBxB,GACpBD,EAAYC,GAAOiC,MAAK,SAACjB,GACvBe,EAAQf,aAUR,yBAASR,UAAU,UAAnB,SACE,qBAAKA,UAAU,YAAf,SACE,cAACO,EAAD,CAASC,KAAMA,WAOzB,SAASkB,IACP,OACE,wBAAQ1B,UAAU,SAAlB,SACE,sBAAKA,UAAU,4BAAf,UACE,sEACA,4BACE,mBAAG2B,KAAK,gCAAR,sCAiBKC,MAVf,WACE,OACE,gCACE,cAAC7B,EAAD,IACA,cAACsB,EAAD,IACA,cAACK,EAAD,QC5ING,iBAAO,cAAC,EAAD,IAASC,SAASC,cAAc,e","file":"static/js/main.4a74cab9.chunk.js","sourcesContent":["export async function fetchImages(breed) {\n  const response = await fetch(\n    `https://dog.ceo/api/breed/${breed}/images/random/12`\n  );\n  const data = await response.json();\n  return data.message;\n}\n","import { useEffect, useState } from 'react';\nimport { fetchImages } from './api';\n\nfunction Header() {\n  return (\n    <header className=\"hero is-dark is-bold\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title\">Cute Dog Images</h1>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nfunction Image(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image\">\n          <img\n            src={props.url}\n            alt=\"cute dog\"\n          />\n        </figure>\n      </div>\n    </div>\n  );\n}\n\nfunction Loading() {\n  return (\n    <p>Loading...</p>\n  );\n}\n\nfunction Gallery(props) {\n  const { urls } = props;\n  if (urls === null) {\n    return <Loading />\n  }\n  return (\n    <div className=\"columns is-vcentered is-multiline\">\n      {urls.map(url => {\n        return (\n          <div key={url} className=\"column is-3\">\n            <Image url={url} />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction Form(props) {\n  function handleSubmit(event) {\n    event.preventDefault();\n    const { breed } = event.target.elements;\n    props.onFormSubmit(breed.value);\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div className=\"field has-addons\">\n          <div className=\"control is-expanded\">\n            <div className=\"select is-fullwidth\">\n              <select name=\"breed\" defaultValue=\"shiba\">\n                <option value=\"shiba\">Shiba</option>\n                <option value=\"akita\">Akita</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"control\">\n            <button type=\"submit\" className=\"button is-dark\">\n              Reload\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nfunction Main() {\n//   const urls = [\n//   \"https://images.dog.ceo/breeds/shiba/shiba-11.jpg\",\n//   \"https://images.dog.ceo/breeds/shiba/shiba-12.jpg\",\n//   \"https://images.dog.ceo/breeds/shiba/shiba-14.jpg\",\n//   \"https://images.dog.ceo/breeds/shiba/shiba-17.jpg\",\n//   \"https://images.dog.ceo/breeds/shiba/shiba-2.jpg\",\n//   \"https://images.dog.ceo/breeds/shiba/shiba-3i.jpg\",\n//   \"https://images.dog.ceo/breeds/shiba/shiba-4.jpg\",\n//   \"https://images.dog.ceo/breeds/shiba/shiba-5.jpg\",\n//   \"https://images.dog.ceo/breeds/shiba/shiba-6.jpg\",\n//   \"https://images.dog.ceo/breeds/shiba/shiba-7.jpg\",\n//   \"https://images.dog.ceo/breeds/shiba/shiba-8.jpg\",\n//   \"https://images.dog.ceo/breeds/shiba/shiba-9.jpg\",\n// ];\n  // const urls = null;\n  const [urls, setUrls] = useState(null);\n  useEffect(() => {\n    fetchImages(\"shiba\").then((urls) => {\n      setUrls(urls);\n    });\n  }, []);\n  function reloadImages(breed) {\n    fetchImages(breed).then((urls) => {\n      setUrls(urls);\n    });\n  }\n  return (\n    <main>\n      <section className=\"section\">\n        <div className=\"container\">\n          <Form onFormSubmit={reloadImages} />\n        </div>\n      </section>\n      <section className=\"section\">\n        <div className=\"container\">\n          <Gallery urls={urls} />\n        </div>\n      </section>\n    </main>\n  );\n}\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <div className=\"content has-text-centered\">\n        <p>Dog images are retrieved from Dog API</p>\n        <p>\n          <a href=\"https://dog.ceo/dog-api/about\">Donate to Dog API</a>\n        </p>\n      </div>\n    </footer>\n  );\n}\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import \"bulma/css/bulma.css\";\n\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(<App />, document.querySelector(\"#content\"));\n"],"sourceRoot":""}